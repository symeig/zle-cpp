#include <vector>
#include <iterator>
#include <chrono>
#include <iostream>

#include <zle.h>

int main() {
    // Example usage
    int n = 55;
    std::vector<std::string> s = get_symbols(n);
    std::vector<std::vector<SymX>> A = {{symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[13]), symx(1, s[14]),   symx(1, s[15]), symx(1, s[16]), symx(1, s[17]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]), symx(1, s[26]), symx(1, s[27]),   symx(1, s[28]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[39]), symx(1, s[40]),   symx(1, s[41]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]),   symx(1, s[54])}, {symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[14]),   symx(1, s[13]), symx(1, s[15]), symx(1, s[17]), symx(1, s[16]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]), symx(1, s[24]), symx(1, s[27]),   symx(1, s[26]), symx(1, s[28]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[40]),   symx(1, s[39]), symx(1, s[41]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]),   symx(1, s[52]), symx(1, s[54])}, {symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]),   symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[24]), symx(1, s[25]),   symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]), symx(1, s[38]),   symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]),   symx(1, s[54]), symx(1, s[53]), symx(1, s[52])}, {symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]),   symx(1, s[9]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[21]), symx(1, s[22]),   symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[32]), symx(1, s[33]), symx(1, s[31]), symx(1, s[29]), symx(1, s[30]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]), symx(1, s[35]),   symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[45]), symx(1, s[46]), symx(1, s[44]), symx(1, s[42]), symx(1, s[43]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]),   symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]),   symx(1, s[8]), symx(1, s[17]), symx(1, s[16]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]),   symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[33]), symx(1, s[32]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]),   symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[46]), symx(1, s[45]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]),   symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]), symx(1, s[4]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]),   symx(1, s[12]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[16]), symx(1, s[17]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[24]),   symx(1, s[25]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]),   symx(1, s[38]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[50]),   symx(1, s[51]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49])}, {symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]), symx(1, s[3]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]),   symx(1, s[12]), symx(1, s[11]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[17]), symx(1, s[16]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]),   symx(1, s[25]), symx(1, s[24]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]),   symx(1, s[38]), symx(1, s[37]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]),   symx(1, s[51]), symx(1, s[50]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49])}, {symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[10]), symx(1, s[9]),   symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]),   symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]),   symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]),   symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47])}, {symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[0]),   symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[16]), symx(1, s[17]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[29]), symx(1, s[30]),   symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]), symx(1, s[42]), symx(1, s[43]),   symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[47]), symx(1, s[48]),   symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]),   symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[17]), symx(1, s[16]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[30]),   symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]), symx(1, s[24]), symx(1, s[43]),   symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[48]),   symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[7]), symx(1, s[6]),   symx(1, s[5]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[31]),   symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[24]), symx(1, s[25]), symx(1, s[44]),   symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]), symx(1, s[38]), symx(1, s[49]),   symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52])}, {symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]), symx(1, s[9]), symx(1, s[5]), symx(1, s[6]),   symx(1, s[7]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[32]),   symx(1, s[33]), symx(1, s[31]), symx(1, s[29]), symx(1, s[30]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[21]), symx(1, s[22]), symx(1, s[45]),   symx(1, s[46]), symx(1, s[44]), symx(1, s[42]), symx(1, s[43]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]), symx(1, s[35]), symx(1, s[50]),   symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[6]), symx(1, s[5]),   symx(1, s[7]), symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[17]), symx(1, s[16]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[33]),   symx(1, s[32]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[46]),   symx(1, s[45]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[51]),   symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[16]), symx(1, s[17]), symx(1, s[18]),   symx(1, s[19]), symx(1, s[20]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]),   symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]),   symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]),   symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41])}, {symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[17]), symx(1, s[16]),   symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[6]), symx(1, s[5]),   symx(1, s[7]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]), symx(1, s[24]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]),   symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]),   symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41])}, {symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[16]), symx(1, s[17]),   symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[7]), symx(1, s[6]),   symx(1, s[5]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[24]), symx(1, s[25]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]),   symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]),   symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]), symx(1, s[38]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39])}, {symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[13]), symx(1, s[14]),   symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]), symx(1, s[9]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[5]), symx(1, s[6]),   symx(1, s[7]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[21]), symx(1, s[22]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[32]), symx(1, s[33]), symx(1, s[31]), symx(1, s[29]), symx(1, s[30]),   symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[45]), symx(1, s[46]), symx(1, s[44]), symx(1, s[42]), symx(1, s[43]),   symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]), symx(1, s[35]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41])}, {symx(1, s[17]), symx(1, s[16]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]),   symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[6]), symx(1, s[5]),   symx(1, s[7]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[33]), symx(1, s[32]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]),   symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[46]), symx(1, s[45]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]),   symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41])}, {symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[16]), symx(1, s[17]),   symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]), symx(1, s[4]), symx(1, s[0]), symx(1, s[1]),   symx(1, s[2]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[24]), symx(1, s[25]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]),   symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[50]), symx(1, s[51]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]),   symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36])}, {symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[17]), symx(1, s[16]),   symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]), symx(1, s[3]), symx(1, s[1]), symx(1, s[0]),   symx(1, s[2]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[25]), symx(1, s[24]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]),   symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[51]), symx(1, s[50]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]),   symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36])}, {symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[16]), symx(1, s[17]),   symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[1]),   symx(1, s[0]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]),   symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]),   symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34])}, {symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]),   symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[16]), symx(1, s[17]),   symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]),   symx(1, s[12]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]),   symx(1, s[46]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]),   symx(1, s[24]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[17]),   symx(1, s[16]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]),   symx(1, s[12]), symx(1, s[11]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]),   symx(1, s[46]), symx(1, s[45]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[23]), symx(1, s[22]), symx(1, s[21]),   symx(1, s[24]), symx(1, s[25]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]),   symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[10]), symx(1, s[9]),   symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]), symx(1, s[38]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]),   symx(1, s[45]), symx(1, s[46]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52])}, {symx(1, s[24]), symx(1, s[25]), symx(1, s[23]),   symx(1, s[21]), symx(1, s[22]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[32]), symx(1, s[33]), symx(1, s[31]), symx(1, s[29]), symx(1, s[30]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]),   symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[11]), symx(1, s[12]),   symx(1, s[10]), symx(1, s[8]), symx(1, s[9]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]), symx(1, s[35]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[45]), symx(1, s[46]), symx(1, s[44]),   symx(1, s[42]), symx(1, s[43]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[25]), symx(1, s[24]), symx(1, s[23]),   symx(1, s[22]), symx(1, s[21]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[33]), symx(1, s[32]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[17]), symx(1, s[16]), symx(1, s[15]),   symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[12]), symx(1, s[11]),   symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[46]), symx(1, s[45]), symx(1, s[44]),   symx(1, s[43]), symx(1, s[42]), symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[26]), symx(1, s[27]), symx(1, s[28]),   symx(1, s[24]), symx(1, s[25]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]),   symx(1, s[16]), symx(1, s[17]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]), symx(1, s[4]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[8]), symx(1, s[9]),   symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[42]), symx(1, s[43]),   symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[50]), symx(1, s[51]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49])}, {symx(1, s[27]), symx(1, s[26]),   symx(1, s[28]), symx(1, s[25]), symx(1, s[24]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[19]), symx(1, s[18]),   symx(1, s[20]), symx(1, s[17]), symx(1, s[16]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]), symx(1, s[3]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[9]),   symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[43]), symx(1, s[42]),   symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[51]), symx(1, s[50]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49])}, {symx(1, s[28]), symx(1, s[27]),   symx(1, s[26]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[20]), symx(1, s[19]),   symx(1, s[18]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[10]),   symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[44]), symx(1, s[43]),   symx(1, s[42]), symx(1, s[45]), symx(1, s[46]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47])}, {symx(1, s[29]), symx(1, s[30]),   symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]), symx(1, s[13]), symx(1, s[14]),   symx(1, s[15]), symx(1, s[16]), symx(1, s[17]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[0]),   symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[34]), symx(1, s[35]),   symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[30]), symx(1, s[29]),   symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]), symx(1, s[24]), symx(1, s[14]), symx(1, s[13]),   symx(1, s[15]), symx(1, s[17]), symx(1, s[16]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[1]),   symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[35]), symx(1, s[34]),   symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[31]), symx(1, s[30]),   symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[24]), symx(1, s[25]), symx(1, s[15]), symx(1, s[14]),   symx(1, s[13]), symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[2]),   symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[36]), symx(1, s[35]),   symx(1, s[34]), symx(1, s[37]), symx(1, s[38]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52])}, {symx(1, s[32]), symx(1, s[33]),   symx(1, s[31]), symx(1, s[29]), symx(1, s[30]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[21]), symx(1, s[22]), symx(1, s[16]), symx(1, s[17]),   symx(1, s[15]), symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]), symx(1, s[9]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]),   symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[45]), symx(1, s[46]), symx(1, s[44]), symx(1, s[42]), symx(1, s[43]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]),   symx(1, s[36]), symx(1, s[34]), symx(1, s[35]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54])}, {symx(1, s[33]), symx(1, s[32]),   symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[17]), symx(1, s[16]),   symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]),   symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[46]), symx(1, s[45]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]),   symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54])}, {symx(1, s[34]), symx(1, s[35]),   symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[47]), symx(1, s[48]),   symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]), symx(1, s[26]), symx(1, s[27]),   symx(1, s[28]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[8]),   symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[16]), symx(1, s[17]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20])}, {symx(1, s[35]),   symx(1, s[34]), symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[48]),   symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]), symx(1, s[24]), symx(1, s[27]),   symx(1, s[26]), symx(1, s[28]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]),   symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[17]), symx(1, s[16]), symx(1, s[19]), symx(1, s[18]),   symx(1, s[20])}, {symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]), symx(1, s[38]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]),   symx(1, s[46]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[24]),   symx(1, s[25]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[7]),   symx(1, s[6]), symx(1, s[5]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]),   symx(1, s[18])}, {symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]), symx(1, s[35]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[45]), symx(1, s[46]), symx(1, s[44]), symx(1, s[42]),   symx(1, s[43]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[21]),   symx(1, s[22]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[32]), symx(1, s[33]), symx(1, s[31]), symx(1, s[29]), symx(1, s[30]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[5]),   symx(1, s[6]), symx(1, s[7]), symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]), symx(1, s[9]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]),   symx(1, s[20])}, {symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[46]), symx(1, s[45]), symx(1, s[44]), symx(1, s[43]),   symx(1, s[42]), symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]), symx(1, s[22]),   symx(1, s[21]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[33]), symx(1, s[32]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[6]),   symx(1, s[5]), symx(1, s[7]), symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[17]), symx(1, s[16]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]),   symx(1, s[20])}, {symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]),   symx(1, s[46]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[50]), symx(1, s[51]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[24]),   symx(1, s[25]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]), symx(1, s[4]), symx(1, s[0]),   symx(1, s[1]), symx(1, s[2]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[16]), symx(1, s[17]), symx(1, s[13]), symx(1, s[14]),   symx(1, s[15])}, {symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]),   symx(1, s[45]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[51]), symx(1, s[50]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[25]),   symx(1, s[24]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]), symx(1, s[3]), symx(1, s[1]),   symx(1, s[0]), symx(1, s[2]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[17]), symx(1, s[16]), symx(1, s[14]), symx(1, s[13]),   symx(1, s[15])}, {symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]),   symx(1, s[46]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[24]),   symx(1, s[25]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]),   symx(1, s[1]), symx(1, s[0]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[14]),   symx(1, s[13])}, {symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]), symx(1, s[46]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[37]),   symx(1, s[38]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]),   symx(1, s[33]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]), symx(1, s[25]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]),   symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[16]), symx(1, s[17]), symx(1, s[18]), symx(1, s[19]),   symx(1, s[20])}, {symx(1, s[43]), symx(1, s[42]), symx(1, s[44]), symx(1, s[46]), symx(1, s[45]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[38]),   symx(1, s[37]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]),   symx(1, s[32]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[25]), symx(1, s[24]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]),   symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[17]), symx(1, s[16]), symx(1, s[19]), symx(1, s[18]),   symx(1, s[20])}, {symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[45]), symx(1, s[46]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]),   symx(1, s[38]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]),   symx(1, s[33]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[24]), symx(1, s[25]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]),   symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]),   symx(1, s[18])}, {symx(1, s[45]), symx(1, s[46]), symx(1, s[44]), symx(1, s[42]), symx(1, s[43]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]),   symx(1, s[35]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[32]), symx(1, s[33]), symx(1, s[31]), symx(1, s[29]),   symx(1, s[30]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[21]), symx(1, s[22]), symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]), symx(1, s[9]),   symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]),   symx(1, s[20])}, {symx(1, s[46]), symx(1, s[45]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]),   symx(1, s[34]), symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[33]), symx(1, s[32]), symx(1, s[31]), symx(1, s[30]),   symx(1, s[29]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]),   symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[17]), symx(1, s[16]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]),   symx(1, s[20])}, {symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[50]), symx(1, s[51]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]), symx(1, s[45]),   symx(1, s[46]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[37]), symx(1, s[38]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[24]),   symx(1, s[25]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[16]),   symx(1, s[17]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[0]), symx(1, s[1]), symx(1, s[2]), symx(1, s[3]), symx(1, s[4]), symx(1, s[5]),   symx(1, s[6]), symx(1, s[7])}, {symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[51]), symx(1, s[50]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]),   symx(1, s[46]), symx(1, s[45]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[38]), symx(1, s[37]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]),   symx(1, s[25]), symx(1, s[24]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]),   symx(1, s[17]), symx(1, s[16]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[1]), symx(1, s[0]), symx(1, s[2]), symx(1, s[4]), symx(1, s[3]),   symx(1, s[6]), symx(1, s[5]), symx(1, s[7])}, {symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[50]), symx(1, s[51]), symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]),   symx(1, s[45]), symx(1, s[46]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[37]), symx(1, s[38]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]),   symx(1, s[24]), symx(1, s[25]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]),   symx(1, s[16]), symx(1, s[17]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]), symx(1, s[3]), symx(1, s[4]),   symx(1, s[7]), symx(1, s[6]), symx(1, s[5])}, {symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[47]), symx(1, s[48]), symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[45]), symx(1, s[46]), symx(1, s[44]),   symx(1, s[42]), symx(1, s[43]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[34]), symx(1, s[35]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[24]), symx(1, s[25]), symx(1, s[23]),   symx(1, s[21]), symx(1, s[22]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]), symx(1, s[32]), symx(1, s[33]), symx(1, s[31]), symx(1, s[29]), symx(1, s[30]), symx(1, s[16]), symx(1, s[17]), symx(1, s[15]),   symx(1, s[13]), symx(1, s[14]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]), symx(1, s[11]), symx(1, s[12]), symx(1, s[10]), symx(1, s[8]), symx(1, s[9]), symx(1, s[3]), symx(1, s[4]), symx(1, s[2]), symx(1, s[0]), symx(1, s[1]),   symx(1, s[5]), symx(1, s[6]), symx(1, s[7])}, {symx(1, s[51]), symx(1, s[50]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[46]), symx(1, s[45]), symx(1, s[44]),   symx(1, s[43]), symx(1, s[42]), symx(1, s[38]), symx(1, s[37]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[25]), symx(1, s[24]), symx(1, s[23]),   symx(1, s[22]), symx(1, s[21]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]), symx(1, s[33]), symx(1, s[32]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[17]), symx(1, s[16]), symx(1, s[15]),   symx(1, s[14]), symx(1, s[13]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]), symx(1, s[12]), symx(1, s[11]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[4]), symx(1, s[3]), symx(1, s[2]), symx(1, s[1]), symx(1, s[0]),   symx(1, s[6]), symx(1, s[5]), symx(1, s[7])}, {symx(1, s[52]), symx(1, s[53]), symx(1, s[54]), symx(1, s[50]), symx(1, s[51]), symx(1, s[47]), symx(1, s[48]), symx(1, s[49]), symx(1, s[42]), symx(1, s[43]), symx(1, s[44]),   symx(1, s[45]), symx(1, s[46]), symx(1, s[39]), symx(1, s[40]), symx(1, s[41]), symx(1, s[37]), symx(1, s[38]), symx(1, s[34]), symx(1, s[35]), symx(1, s[36]), symx(1, s[26]), symx(1, s[27]), symx(1, s[28]),   symx(1, s[24]), symx(1, s[25]), symx(1, s[21]), symx(1, s[22]), symx(1, s[23]), symx(1, s[29]), symx(1, s[30]), symx(1, s[31]), symx(1, s[32]), symx(1, s[33]), symx(1, s[18]), symx(1, s[19]), symx(1, s[20]),   symx(1, s[16]), symx(1, s[17]), symx(1, s[13]), symx(1, s[14]), symx(1, s[15]), symx(1, s[8]), symx(1, s[9]), symx(1, s[10]), symx(1, s[11]), symx(1, s[12]), symx(1, s[5]), symx(1, s[6]), symx(1, s[7]), symx(1, s[3]), symx(1, s[4]),   symx(1, s[0]), symx(1, s[1]), symx(1, s[2])}, {symx(1, s[53]), symx(1, s[52]), symx(1, s[54]), symx(1, s[51]), symx(1, s[50]), symx(1, s[48]), symx(1, s[47]), symx(1, s[49]), symx(1, s[43]), symx(1, s[42]), symx(1, s[44]),   symx(1, s[46]), symx(1, s[45]), symx(1, s[40]), symx(1, s[39]), symx(1, s[41]), symx(1, s[38]), symx(1, s[37]), symx(1, s[35]), symx(1, s[34]), symx(1, s[36]), symx(1, s[27]), symx(1, s[26]), symx(1, s[28]),   symx(1, s[25]), symx(1, s[24]), symx(1, s[22]), symx(1, s[21]), symx(1, s[23]), symx(1, s[30]), symx(1, s[29]), symx(1, s[31]), symx(1, s[33]), symx(1, s[32]), symx(1, s[19]), symx(1, s[18]), symx(1, s[20]),   symx(1, s[17]), symx(1, s[16]), symx(1, s[14]), symx(1, s[13]), symx(1, s[15]), symx(1, s[9]), symx(1, s[8]), symx(1, s[10]), symx(1, s[12]), symx(1, s[11]), symx(1, s[6]), symx(1, s[5]), symx(1, s[7]), symx(1, s[4]), symx(1, s[3]),   symx(1, s[1]), symx(1, s[0]), symx(1, s[2])}, {symx(1, s[54]), symx(1, s[53]), symx(1, s[52]), symx(1, s[50]), symx(1, s[51]), symx(1, s[49]), symx(1, s[48]), symx(1, s[47]), symx(1, s[44]), symx(1, s[43]), symx(1, s[42]),   symx(1, s[45]), symx(1, s[46]), symx(1, s[41]), symx(1, s[40]), symx(1, s[39]), symx(1, s[37]), symx(1, s[38]), symx(1, s[36]), symx(1, s[35]), symx(1, s[34]), symx(1, s[28]), symx(1, s[27]), symx(1, s[26]),   symx(1, s[24]), symx(1, s[25]), symx(1, s[23]), symx(1, s[22]), symx(1, s[21]), symx(1, s[31]), symx(1, s[30]), symx(1, s[29]), symx(1, s[32]), symx(1, s[33]), symx(1, s[20]), symx(1, s[19]), symx(1, s[18]),   symx(1, s[16]), symx(1, s[17]), symx(1, s[15]), symx(1, s[14]), symx(1, s[13]), symx(1, s[10]), symx(1, s[9]), symx(1, s[8]), symx(1, s[11]), symx(1, s[12]), symx(1, s[7]), symx(1, s[6]), symx(1, s[5]), symx(1, s[3]), symx(1, s[4]),   symx(1, s[2]), symx(1, s[1]), symx(1, s[0])}};

    int batch_size = 30;
    int stagger = 0;
    int base = 10;

    auto start = std::chrono::high_resolution_clock::now();

    std::vector<std::vector<int>> result = zle_eigs(A, s, batch_size, stagger, base);

    auto end = std::chrono::high_resolution_clock::now();

    auto duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
    std::cout << "finished in " << duration.count() << " milliseconds" << std::endl;

    // Print results
    std::cout << "consolidated final result:" << std::endl;
    std::cout << "[";
    for (int i = 0; i < n; ++i) {
        std::cout << "[";
        for (int j = 0; j < n; ++j) {
            int coeff = result[i][j];
            std::cout << coeff << ",";
        }
        std::cout << "]," << std::endl;
    }
    std::cout << "]" << std::endl;

    return 0;
}